#include <iostream>
#include <cstdlib>
struct node 
{
  int data;
  struct node *left;
  struct node *right;

};




struct nod
{
  int data;
  struct node *left;
  struct node *right;

}

struct node *head1 = (struct node *) malloc (sizeof(struct node) );
struct node *head2 = (struct node *) malloc (sizeof(struct node) );

void display(struct node * );


struct node * new_node(int data)
{

  struct node *node = (struct node *) malloc(sizeof(struct node) );
  node->data = data;

  return node;

}

void inorder (struct node * );//LPR (left , parent ,right) 
void preorder (struct node * );//PLR (parent , left ,right )
void postorder (struct node * );//LRR (left , right ,parent )


int main()
{
 
     struct node *root  = new_node(1);
     root->left             = new_node(2);
     root->right           = new_node(3);
     root->left->left     = new_node(4);
     root->left->right   = new_node(5);
    
      std::cout << "\n Inorder===";
     inorder(root);
      std::cout << "\n Preorder===";
     preorder(root );
     std::cout << "\n Postorder===";
     postorder(root);
   
     std::cout << "\n inoreder =====" ;
     display(head1);
     std::cout << "\n preorder =====" ; 
      display(head2);
}



void inorder(struct node * node)
{
static int count = 0;

static struct node * trv_in;

  if(node ==NULL) //DOnt put node->next= Null bcaouse when its reaches to 5 then since its deosnt have any child sto its revert back to node(node->rihgt) and it will not get printted

   return ;

   inorder(node->left);
   std::cout << " " << node->data;
   if (count == 0)
    {   head1 = node;
         trv_in =  node;
    }
    else
    { trv_in->next = node;
      trv_in = node;

    }

   count++;
   inorder(node->right);

}
 


void preorder(struct node * node)//PLR
{

static int count = 0;

static struct node * trv_in;


  if(node ==NULL) //DOnt put node->next= Null bcaouse when its reaches to 5 then since its deosnt have any child sto its revert back to node(node->rihgt) and it w

   return ;
 
   std::cout << " " << node->data;
   if (count == 0)
    {   head2 = node;
         trv_in =  node;
    }
    else
    { trv_in->next = node;
      trv_in = node;

    }

   count++;
   
   inorder(node->left);
   inorder(node->right);

}




void postorder(struct node * node)//LRP
{

  if(node ==NULL) //DOnt put node->next= Null bcaouse when its reaches to 5 then since its deosnt have any child sto its revert back to node(node->rihgt) and it w

   return ;

   inorder(node->left);
   inorder(node->right);
   std::cout << " " << node->data;
   
}


void display(struct node * root)

{
  std::cout << "\n HI IAM IN DISPLAY OF LINK LIST";

  if(root==NULL)
  {
    std::cout << "\nno element to display\n";
  }

  else
   {
     struct node *node=root;
     std::cout << "\ndisplay ELEMENT =====";

    while(node->next!=NULL)
      {
        std::cout << "   " << node->data;
        node=node->next;
      }

     std::cout << "\nandlast lemet ==  " << node->data << "\n" ;
   }


}

    


